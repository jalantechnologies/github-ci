name: clean

on:
  workflow_call:
    inputs:
      # required

      app_name:
        required: true
        type: string
      app_env:
        required: true
        type: string
      branch:
        required: true
        type: string
      docker_username:
        required: true
        type: string
        description: 'Username for authenticating with provided Docker registry'

      # optional

      ci_version:
        required: false
        type: string
        description: 'Branch from which CI actions will be checked out'
        default: 'v1.1'
      deploy_root:
        required: false
        type: string
        description: 'Directory where deployment would look for kubernetes specification files'
        default: 'lib/kube'
      docker_registry:
        required: false
        type: string
        description: 'Docker registry where built images will be pushed. By default uses Docker Hub.'
        default: registry.hub.docker.com

    secrets:
      docker_password:
        required: false
      do_access_token:
        required: true
      do_cluster_id:
        required: true

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (app)
        uses: actions/checkout@v3
        with:
          path: app

      - name: Checkout (platform)
        uses: actions/checkout@v3
        with:
          repository: jalantechnologies/github-ci
          path: platform
          ref: ${{ inputs.ci_version }}

      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: |
          BRANCH_NAME=$(echo ${{ inputs.branch }} | sed -e 's/^refs\/heads\///g')
          BRANCH_HASH=$(sha1sum < <(printf '%s' $BRANCH_NAME) | cut -c -15)

          echo "##[set-output name=branch;]$(echo $BRANCH_NAME)"
          echo "##[set-output name=branch_hash;]$(echo $BRANCH_HASH)"

      - name: DigitalOcean setup
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.do_access_token }}

      - name: Kubernetes setup
        env:
          DO_CLUSTER_ID: ${{ secrets.do_cluster_id }}
        run: doctl kubernetes cluster kubeconfig save $DO_CLUSTER_ID

      - name: Kubernetes clean
        env:
          KUBE_ROOT: app/${{ inputs.deploy_root }}
          KUBE_NS: ${{ inputs.app_name }}-${{ inputs.app_env }}
          KUBE_APP: ${{ inputs.app_name }}-${{ inputs.app_env }}-${{ steps.extract_branch.outputs.branch_hash }}
          KUBE_ENV: ${{ inputs.app_env }}
        run: |
          source platform/lib/kube/clean.sh
        
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Delete Image from Docker Hub
        run: |
          curl --location --request DELETE "https://hub.docker.com/v2/repositories/jalantechnologies/boilerplate-mern/tags/{steps.extract_branch.outputs.branch_hash}/" \
          --header 'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlDK1RDQ0FwK2dBd0lCQWdJQkFEQUtCZ2dxaGtqT1BRUURBakJHTVVRd1FnWURWUVFERXp0U1RVbEdPbEZNUmpRNlEwZFFNenBSTWtWYU9sRklSRUk2VkVkRlZUcFZTRlZNT2taTVZqUTZSMGRXV2pwQk5WUkhPbFJMTkZNNlVVeElTVEFlRncweU16QXhNRFl3TkRJM05EUmFGdzB5TkRBeE1qWXdOREkzTkRSYU1FWXhSREJDQmdOVkJBTVRPME5EVlVZNlNqVkhOanBGUTFORU9rTldSRWM2VkRkTU1qcEtXa1pST2xOTk0wUTZXRmxQTkRwV04wTkhPa2RHVjBJNldsbzFOam8wVlVSRE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBek4wYjBqN1V5XC9hc2pZWFdoMmczcW82SmhPa0FqWFdBVUJjc0h1NmhZWlJGTDl2ZTgxM1RCNGNsOFFreENJNGNVZ0dHbkdXWFZ4SDJ1NXZFdHhTT3FXQnJ4U05yaFNNalwvVk8rNlwvaVkrOG1GRmEwR2J5czF3VDVjNlY5cWROaERiVGNwQXVYSjFSNGJLdSt1VGpVS0VIYXlqSFI5TFBEeUdnUFwvbm1BWnZOT1hHbXJTU0pGSTZ4RTZmN0FcLys5Wm1xaDJWVFpCVzRxd25KcXRyc0kzY294M1BzMzBLYythSHdXdVl2TlF0U0F3K2pVeENVUWhFZkZrSUpLOHo5V2xcL1FjdE9EcEdUeXNtVHBjNzZaVEdKWWtnaGhGTFJEMmJQTlFEOEU1ZWdKa2RQOXhpaW5sVGx3MjBxWlhVRmlqdWFBcndOR0xJbUJEWE0wWlI1YzVtU3Z3SURBUUFCbzRHeU1JR3ZNQTRHQTFVZER3RUJcL3dRRUF3SUhnREFQQmdOVkhTVUVDREFHQmdSVkhTVUFNRVFHQTFVZERnUTlCRHREUTFWR09rbzFSelk2UlVOVFJEcERWa1JIT2xRM1RESTZTbHBHVVRwVFRUTkVPbGhaVHpRNlZqZERSenBIUmxkQ09scGFOVFk2TkZWRVF6QkdCZ05WSFNNRVB6QTlnRHRTVFVsR09sRk1SalE2UTBkUU16cFJNa1ZhT2xGSVJFSTZWRWRGVlRwVlNGVk1Pa1pNVmpRNlIwZFdXanBCTlZSSE9sUkxORk02VVV4SVNUQUtCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFtUTR4bEF2V1ZQK09cL2E2WENTTmlhQVhFTUFvVFBUVFhFYlgySzZFVThlMENJSDRBMDBJWG1Sd2N0a0Q4eVg3N2RNWjIrSkRjUUZ0MXFGS0xkVHlKdXNPVSJdfQ.eyJzb3VyY2UiOnsidHlwZSI6InB3ZCIsImlkIjoiN2Y0ZTI3YzctNjNkYy00ZTJlLTkzODYtZjA3ZGZmZmQ4MjcyIn0sImh0dHBzOlwvXC9odWIuZG9ja2VyLmNvbSI6eyJzb3VyY2UiOiJkb2NrZXJfcHdkfDdmNGUyN2M3LTYzZGMtNGUyZS05Mzg2LWYwN2RmZmZkODI3MiIsInV1aWQiOiI3ZjRlMjdjNy02M2RjLTRlMmUtOTM4Ni1mMDdkZmZmZDgyNzIiLCJzZXNzaW9uX2lkIjoiMDc4ZjNlZWQtYWU1OS00OWFhLWIyYmItY2I1YWIxYmI0MmU2IiwidXNlcm5hbWUiOiJqYWxhbnRlY2hub2xvZ2llcyIsImVtYWlsIjoiZGV2ZWxvcGVyQGphbGFudGVjaG5vbG9naWVzLmNvbSIsInJvbGVzIjpbXX0sInVzZXJuYW1lIjoiamFsYW50ZWNobm9sb2dpZXMiLCJleHAiOjE2OTI3NzM5NzQsImlzcyI6Imh0dHBzOlwvXC9hcGkuZG9ja2VyLmNvbVwvIiwiYXVkIjpbImh0dHBzOlwvXC9odWIuZG9ja2VyLmNvbSJdLCJqdGkiOiIwNzhmM2VlZC1hZTU5LTQ5YWEtYjJiYi1jYjVhYjFiYjQyZTYiLCJ1c2VyX2lkIjoiN2Y0ZTI3Yzc2M2RjNGUyZTkzODZmMDdkZmZmZDgyNzIiLCJzZXNzaW9uX2lkIjoiMDc4ZjNlZWQtYWU1OS00OWFhLWIyYmItY2I1YWIxYmI0MmU2IiwiaWF0IjoxNjkwMTgxOTc0LCJzdWIiOiI3ZjRlMjdjNzYzZGM0ZTJlOTM4NmYwN2RmZmZkODI3MiJ9.fOa224t4WLpBwcGoAUkSeVsYHf06oDQDuO9dU6WAeEhOyg8waZDAwUUz39H2bt_0XnIum21-VP1J3WiAmdFhculFlaIiiCpdiVY-KfamZwe4FDMalR9n2hWVSpCKTvxcnA2baJOHiEoSVB-zjBveccJ2Fk_BrsrmtmG3GgpIb7YQqMwET90tb-GopqOMltSo8J6M2VQ7jseH9DgqXzPN1qYm_fgGBdsnbG7T1C_D0jE4FIAJKvR4_PiLOPCVCOyMkNf2DzbPwa79NDL4DN7on9uRzScKtCferDbjlAUy4k7CnnDy75q4cmtlvC3eP8jPk9Phvrgqd2__tU7-cVCDGg'

# TODO: Find a way to delete tag from provided docker registry and repository
#      - name: Docker setup
#        if: inputs.docker_username != ''
#        shell: bash
#        run: |
#          #!/bin/bash
#          set -ex
#
#          mkdir -p $HOME/.regctl
#
#          curl -L "https://github.com/regclient/regclient/releases/latest/download/regctl-linux-arm64" > "$HOME/.regctl/regctl"
#          chmod 755 "$HOME/.regctl/regctl"
#
#          echo "$HOME/.regctl" >> $GITHUB_PATH
#          regctl version
#
#      - name: Docker clean
#        if: inputs.docker_username != ''
#        shell: bash
#        run: |
#          regctl registry login ${{ inputs.registry }} -u ${{ inputs.username }} -p ${{ secrets.docker_password }}
#          regctl tag rm ${{ inputs.registry }}/${{ inputs.username }}/${{ inputs.app_name }}:${{ steps.extract_branch.outputs.branch_hash }}
